{
  "verticles": {
    "ServiceDiscoveryVerticle": {
      "class": "com.edgar.servicediscovery.verticle.ServiceDiscoveryVerticle",
      "instances": 1,
      "worker": false,
      "config": {
        "importer": "zookeeper://test.ihorn.com.cn:2181",
        "zookeeper.path": "/csst-microservice",
        "consul.scan-period": 2000,
        "weight.increase": 1,
        "weight.decrease": 10,
        "strategy": {
          "user": "random",
          "device": "round_robin"
        }
      }
    },
    "ApiDefinitionVerticle": {
      "class": "com.edgar.direwolves.verticle.ApiDefinitionVerticle",
      "instances": 1,
      "worker": false,
      "config": {
        "api.discovery" : {
          "importer" : {
            "example" : {
              "file" : "standalone/src/test/resources/router"
            }
          },
          "publishedAddress" : "direwolves.api.published",
          "unpublishedAddress" : "direwolves.api.unpublished"
        }
      }
    },
    "RedisVerticle": {
      "class": "com.edgar.direwolves.redis.RedisVerticle",
      "instances": 1,
      "worker": false,
      "config": {
        "redis" : {
          "host": "10.11.0.31",
          "port": 6379,
          "auth": "",
          "redis.sub.keys": [
            "__keyevent@0__:expired",
            "__keyevent@0__:del"
          ]
        }
      }
    },
    "ApiDispatchVerticle": {
      "class": "com.edgar.direwolves.verticle.ApiDispatchVerticle",
      "instances": 1,
      "worker": false,
      "dependencies": [ "RedisVerticle" ],
      "config": {
        "http.port": 9000,
        "namespace": "example",
        "cache" : "local",
        "long_req_time": 1000,
        "service.discovery": {
          "strategy": {
            "user": "random",
            "device": "round_robin"
          }
        },
        "jwt": {
          "path": "keystore.jceks",
          "type": "jceks",
          "password": "secret",
          "algorithm": "HS512",
          "audience": "",
          "issuer": "",
          "subject": "",
          "expiresInSeconds": 1800
        },
        "user": {
          "userClaimKey": "userId",
          "permissionsClaimKey": "permissions",
          "unique": true
        },
        "timeout.expires": 300,
        "timeout.enable": false,
        "strict.arg": {
          "enable": true,
          "query.excludes": [
            "appKey",
            "sign",
            "signMethod",
            "v",
            "nonce",
            "timestamp"
          ],
          "body.excludes": []
        },
        "app.origin": [
          {
            "appKey": "RmOI7jCvDtfZ1RcAkea1",
            "appSecret": "dbb0f95c8ebf4317942d9f5057d0b38e",
            "appCode": 0,
            "scope": "all"
          }
        ],
        "app.codeKey": "companyCode",
        "app.permissionKey": "scope",
        "app.importer": {
          "scan-period": 500000,
          "url": "/appkey/import"
        },
        "log.ignore": [
          "appkey_list"
        ],
        "backend.permitted": [
          "18627874615"
        ],
        "request.transformer": {
          "query.remove": [
            "appKey",
            "nonce",
            "v",
            "timestamp",
            "signMethod",
            "sign"
          ]
        },
        "circuit.breaker" : {
          "maxFailures" : 5,
          "maxRetries" : 0,
          "resetTimeout" : 60000,
          "timeout" : 3000,
          "metricsRollingWindow" : 10000,
          "notificationPeriod" : 2000,
          "notificationAddress" : "vertx.circuit-breaker",
          "registry" : "vertx.circuit.breaker.registry"
        },
        "rate.limiter": {
          "user_limiter": {
            "key": "$user.userId",
            "limit": 3,
            "interval": 2,
            "unit": "SECOND"
          }
        }
      }
    }
  }
}